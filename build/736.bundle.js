(()=>{let t=null;const e={write:t=>{postMessage({err:!1,text:t,type:"stdout"})},flush:()=>{}},s={write:t=>{postMessage({err:!1,text:t,type:"error"})},flush:()=>{}},r={readline:()=>{postMessage({type:"stdin",err:!1,text:""});let e="";Atomics.wait(t,0,-1);const s=t[0];t[0]=-1;const r=new Uint8Array(s);for(let e=0;e<s;e++)r[e]=t[1+e];return e+=new TextDecoder("utf-8").decode(r),e}};!async function(){importScripts("https://cdn.jsdelivr.net/pyodide/v0.18.1/full/pyodide.js"),pyodide=await loadPyodide({fullStdLib:!1,indexURL:"https://cdn.jsdelivr.net/pyodide/v0.18.1/full/"}),pyodide.registerJsModule("fakeprint",{stdout:e,stderr:s,stdin:r}),pyodide.runPython("\nimport sys\nimport fakeprint\n\nsys.stdout = fakeprint.stdout\nsys.stderr = fakeprint.stdout\nsys.stdin = fakeprint.stdin")}(),onmessage=e=>{t=new Int32Array(e.data.buffer),d(e.data.code)};const d=async t=>{try{pyodide.runPython(t)}catch(t){postMessage({err:!1,text:t.toString(),type:"error"})}}})();